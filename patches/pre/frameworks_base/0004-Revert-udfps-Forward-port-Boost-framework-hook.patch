From f20d26f812d6c268d37c6ea6d84c1f06fcc7cf91 Mon Sep 17 00:00:00 2001
From: TheAtt1la <alittauwu@gmail.com>
Date: Sat, 4 Mar 2023 23:36:04 +0100
Subject: [PATCH 4/5] Revert udfps: Forward port Boost framework hook.

---
 .../systemui/biometrics/UdfpsController.java  | 21 +------------------
 1 file changed, 1 insertion(+), 20 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
index 09bf777e3c03..14d985fba362 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
@@ -52,7 +52,6 @@ import android.os.UserHandle;
 import android.os.VibrationAttributes;
 import android.os.VibrationEffect;
 import android.provider.Settings;
-import android.util.BoostFramework;
 import android.util.Log;
 import android.util.RotationUtils;
 import android.view.LayoutInflater;
@@ -201,11 +200,6 @@ public class UdfpsController implements DozeReceiver {
     private boolean mFrameworkDimming;
     private int[][] mBrightnessAlphaArray;
 
-    // Boostframework for UDFPS
-    private BoostFramework mPerf = null;
-    private boolean mIsPerfLockAcquired = false;
-    private static final int BOOST_DURATION_TIMEOUT = 2000;
-
     @VisibleForTesting
     public static final VibrationAttributes UDFPS_VIBRATION_ATTRIBUTES =
             new VibrationAttributes.Builder()
@@ -737,7 +731,6 @@ public class UdfpsController implements DozeReceiver {
             mUdfpsAnimation = new UdfpsAnimation(mContext, mWindowManager, mSensorProps);
         }
         mLocalPowerManager = LocalServices.getService(PowerManagerInternal.class);
-        mPerf = new BoostFramework();
     }
 
     private void updateScreenOffFodState() {
@@ -875,16 +868,9 @@ public class UdfpsController implements DozeReceiver {
             Log.v(TAG, "showUdfpsOverlay | the overlay is already showing");
         }
         
-        if (mLocalPowerManager != null && !BoostFramework.boostFrameworkJarExists) {
+        if (mLocalPowerManager != null) {
             mLocalPowerManager.setPowerBoost(Boost.INTERACTION, POWER_BOOST_TIMEOUT_MS);
         }
-
-        if (mPerf != null && !mIsPerfLockAcquired) {
-            mPerf.perfHint(BoostFramework.VENDOR_HINT_FIRST_LAUNCH_BOOST,
-                    null,
-                    BOOST_DURATION_TIMEOUT);
-            mIsPerfLockAcquired = true;
-        }
     }
 
     private void hideUdfpsOverlay() {
@@ -1113,11 +1099,6 @@ public class UdfpsController implements DozeReceiver {
         }
         mIsAodInterruptActive = false;
         updateViewDimAmount(false);
-
-        if (mPerf != null && mIsPerfLockAcquired) {
-            mPerf.perfLockRelease();
-            mIsPerfLockAcquired = false;
-        }
     }
 
     private static int interpolate(int x, int xa, int xb, int ya, int yb) {
-- 
2.34.1



